---
import type { MarkdownInstance } from 'astro';
import BaseLayout from '../../layouts/BaseLayout.astro'
import BlogPost from '../../components/BlogPost.astro';
export async function getStaticPaths() {
    const allPosts = await Astro.glob('../posts/*.md')
    const uniqueTags: string[] = [...new Set(allPosts.map(post => post.frontmatter.tags).flat())]

    return uniqueTags.map(tag => {
        const filteredPosts = allPosts.filter(post => post.frontmatter.tags?.includes(tag))
        return {
            params: {tag},
            props: {posts: filteredPosts}
        }
    })
}
interface Props {
    posts: MarkdownInstance<Record<string, any>>[]
}
const { tag } = Astro.params
const { posts } = Astro.props
const pageTitle = "Tag is "+tag
---
<BaseLayout pageTitle={pageTitle}>
    <p>Posts tagged with {tag}</p>
    {posts.map(post =>
        <BlogPost url={post.url} title={post.frontmatter.title} />
    )}
</BaseLayout>